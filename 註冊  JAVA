public class MainActivity_sigup extends AppCompatActivity {
    MyDB myDB;
    SQLiteDatabase db;
    SharedPreferences sp1;

    FirebaseAuth hh ;
    Activity context = this ;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.mainactivity_sigup);

        ImageButton return1 = findViewById(R.id.imageButton5);
        Button signup = findViewById(R.id.button3);
        EditText ID1 = findViewById(R.id.editTextTextPassword3);
        EditText password = findViewById(R.id.editTextTextPassword4);


        hh = FirebaseAuth.getInstance() ;


        return1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {  //註冊介面
                Intent intent = new Intent(MainActivity_sigup.this, MainActivity.class);
                startActivity(intent);
            }
        });






        signup.setOnClickListener(new View.OnClickListener() {


            @Override
            public void onClick(View v) {

            
                String userid = ID1.getText().toString();
                String userpassword = password.getText().toString();


                if (TextUtils.isEmpty(userid) || TextUtils.isEmpty(userpassword)) {
                    Toast.makeText(MainActivity_sigup.this, "帳號或密碼為空!", Toast.LENGTH_SHORT).show();
                }else {
                    hh.createUserWithEmailAndPassword(userid,userpassword).addOnCompleteListener(context, new OnCompleteListener<AuthResult>() {
                        @Override

                        public void onComplete(@NonNull Task<AuthResult> task) {
                                    if (isValidEmail(userid) && isValidPassword(userpassword)) {

                                        if (task.isSuccessful()) {
                                            FirebaseUser user = hh.getCurrentUser() ;
                                            Toast.makeText(MainActivity_sigup.this, "註冊成功!!!", Toast.LENGTH_SHORT).show();
                                            Intent intent = new Intent(MainActivity_sigup.this, MainActivity.class);
                                            startActivity(intent);
                                        } else if (userpassword.length() < 6) {
                                            Toast.makeText(MainActivity_sigup.this, "密碼未超過6字元", Toast.LENGTH_SHORT).show();

                                        }  else  {
                                            Toast.makeText(MainActivity_sigup.this, "已註冊過，請直接登入!", Toast.LENGTH_SHORT).show();
                                            Intent intent = new Intent(MainActivity_sigup.this, MainActivity.class);
                                            startActivity(intent);

                                        }

                                    }
                                    else {
                                        Toast.makeText(MainActivity_sigup.this, "email 或 密碼 格式錯誤!", Toast.LENGTH_SHORT).show() ;
                                    }



                        }
                    });
                }

            }

            private boolean isValidEmail(String email) {
                String emailPattern = "[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
                if (email.matches(emailPattern)) {
                    return true ;
                }
                return false;
            }

            private boolean isValidPassword(String ispassword) {
                String PasswordPattern =  "^(?=.*[A-Za-z])(?=.*\\d).+$";
                if (ispassword.matches(PasswordPattern)) {
                    return true ;
                }
                return false ;
            }


        });
    }

 }
